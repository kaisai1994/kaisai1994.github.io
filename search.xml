<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Android面试经验总结]]></title>
      <url>http://kaisai1994.com/blog/2016/06/Android%E9%9D%A2%E8%AF%95%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93.html</url>
      <content type="html"><![CDATA[<p>最近常混迹一些论坛还有一些讨论组，发现很多好心人发了很多自己的面试经验，我自己觉得是一次很好的总结，所以把各个人的面试经验提到的问题又总结了一下，发现面试技术很多都注意基础，还有一些都是经常会被考到的技术点，自己总结出来一份也帮助自己好好准备面试。<br><a id="more"></a></p>
<h1 id="百度"><a href="#百度" class="headerlink" title="百度"></a>百度</h1><h4 id="网络技术"><a href="#网络技术" class="headerlink" title="网络技术"></a>网络技术</h4><ul>
<li>TCP和UDP的区别</li>
<li>TCP如何保证可靠传输</li>
<li>HTTP的报文格式</li>
<li>HTTP的头部包含哪些内容</li>
<li>cookie实在头部还是数据段，为什么</li>
<li>HTTP回复的状态吗和你知道哪些</li>
</ul>
<h4 id="Java面向对象"><a href="#Java面向对象" class="headerlink" title="Java面向对象:"></a>Java面向对象:</h4><ul>
<li>多态</li>
<li>设计模式</li>
<li>Java多线程的实现及同步</li>
</ul>
<h4 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h4><ul>
<li>线程和进程的区别</li>
<li>操作系统如何实现多线程的调用</li>
</ul>
<h4 id="软件工程"><a href="#软件工程" class="headerlink" title="软件工程"></a>软件工程</h4><ul>
<li>开发的瀑布模型</li>
<li>开发软件项目的历程</li>
<li>系统设计和详细设计的区别，类图在哪个阶段画的</li>
<li>测试</li>
<li>如何做到覆盖测试，覆盖到每个分支</li>
</ul>
<h4 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h4><p>区别2.X 3.X 4.X</p>
<h1 id="蘑菇街"><a href="#蘑菇街" class="headerlink" title="蘑菇街"></a>蘑菇街</h1><h4 id="Android-1"><a href="#Android-1" class="headerlink" title="Android"></a>Android</h4><ul>
<li>touch event的事件传递机制</li>
<li>activity四种启动模式</li>
<li>常见设计模式和使用情况</li>
<li>获取一个button的高度</li>
<li>自定义View的流程</li>
<li>内存泄漏</li>
<li>thread的start和run方法有什么区别，开启一个线程必须调用start方法么</li>
</ul>
<h1 id="网易"><a href="#网易" class="headerlink" title="网易"></a>网易</h1><ul>
<li>APP怎么防止被强杀，怎么做到多进程</li>
<li>Retrofit的优点和好处 MD的控件</li>
<li>消息机制</li>
<li>布局优化 merge include viewstub</li>
<li>android中有哪些动画，View动画与属性动画的区别</li>
<li>android网络优化</li>
<li>自定义view的过程 三个测量模式，怎样从onMesure的两个参数中获取长度</li>
<li>事件分发机制</li>
<li>ListView 加载网络图片，怎样防止图片错乱</li>
<li>java中的四种引用</li>
<li>类加载器，双亲委托</li>
<li>http和https的区别 RSA是什么，数字签名</li>
<li>dp与px的转换公式，为什么用dp</li>
<li>打包签名流程</li>
<li>一键结束全部程序，activity会不调用onstop ondestory被强杀怎么恢复数据</li>
<li>ANR几秒</li>
<li>快排 时间复杂度 O（n2）是怎样的情况</li>
<li>volatile和synchronized的区别，锁有哪些，static和synchd修饰的方法是什么锁，两个线程同时i++会怎么样还有线程池</li>
<li>AsyncTask </li>
<li>有个线程跑完后会显示textview文字，但是没跑完就按返回会发生什么</li>
</ul>
<h1 id="蘑菇街Android开发"><a href="#蘑菇街Android开发" class="headerlink" title="蘑菇街Android开发"></a>蘑菇街Android开发</h1><ul>
<li>Git做代码托管，rebase，fetch和pull</li>
<li>Java虚函数</li>
<li>多态</li>
<li>Java反射，类加载的Class怎么调用类的所有属性和方法</li>
<li>Android中的几种Context有什么区别</li>
<li>Android内存泄漏</li>
<li>bitmap复用</li>
<li>OOM</li>
<li>外观模式</li>
<li>FrameWork源码</li>
<li>自定义控件</li>
<li>Android动态加载</li>
</ul>
<h1 id="蘑菇街-1"><a href="#蘑菇街-1" class="headerlink" title="蘑菇街"></a>蘑菇街</h1><ul>
<li>Android四大组件</li>
<li>Android生命周期onpause和onstop</li>
<li>Fragment是否看过源码</li>
<li>Service有哪几种</li>
<li>隐式启动和显式启动</li>
<li>Service两种启动方式</li>
<li>启动线程方式有哪几种</li>
<li>handle消息队列相关</li>
<li>几种常见布局， 布局group树过程</li>
<li>weight属性</li>
<li>布局优化相关</li>
<li>ArraylistLinklist</li>
<li>线程进程区别</li>
<li>一个app能否是多线程</li>
</ul>
<h1 id="360"><a href="#360" class="headerlink" title="360"></a>360</h1><ul>
<li>网络框架实现，volley原理</li>
<li>线程池原理，java线程池</li>
<li>一个activity只能有一个进程么</li>
<li>activity任务栈，启动模式</li>
<li>夜间主题</li>
<li>动态加载原理，classloader</li>
<li>listview实现左滑</li>
<li>view的事件分发与渲染流程</li>
<li>LruCache的理解原理以及哪些方式实现缓存调度</li>
<li>GC原理，实现方式，能否手动控制GC回收</li>
<li>OOM内存泄漏的问题</li>
<li>mvp与mvc区别，实现原理</li>
<li>volley原理，发送五个请求</li>
<li>图片缓存技术的实现</li>
<li>listview原理，adpter与view如何绑定的，如何自己设计一个类似listview的自定义view，子item复用，管理以及getview实现</li>
<li>进程实现方式</li>
<li>asynctask</li>
<li>CG原理</li>
</ul>
<h1 id="网易-1"><a href="#网易-1" class="headerlink" title="网易"></a>网易</h1><ul>
<li>推送。长连接 心跳连接</li>
<li>LTE协议栈项目</li>
<li>项目开源框架的源码分析</li>
<li>加密算法</li>
<li>消息处理机制</li>
<li>asynctask</li>
<li>android卡顿优化</li>
<li>并发</li>
<li>属性动画</li>
<li>touch事件分发机制</li>
<li>android开机过程</li>
<li>Service与Thread的区别</li>
<li>SQLite并发读取或者写入</li>
<li>线程与进程</li>
<li>Activity与Service的通信问题</li>
<li>Activity与Fragment的生命周期</li>
</ul>
<h1 id="腾讯-amp-阿里"><a href="#腾讯-amp-阿里" class="headerlink" title="腾讯 &amp; 阿里"></a>腾讯 &amp; 阿里</h1><ul>
<li>volley原理</li>
<li>403是什么意思</li>
<li>TCP如何实现可靠传输</li>
<li>线程进程的区别</li>
<li>调度算法</li>
<li>快排</li>
<li>handle looper MessageQueen</li>
<li>UIL和picasso的区别，底层实现</li>
<li>java四种引用</li>
<li>IPC几种通信方式</li>
<li>static加在方法上有什么特殊的含义</li>
<li>hashmap的原理</li>
<li>String StringBuilder StringBuffer</li>
<li>LRU</li>
<li>IPC几种通信方式</li>
<li>ListView 和RecycleView</li>
<li>ActionBar和Toolbar</li>
<li>重写View</li>
<li>Volley</li>
<li>UIL的原理</li>
<li>zygote死掉后会重新启动</li>
<li>zygote和systemservice</li>
<li>Android系统为系统安全性做什么</li>
<li>java基础知识</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[基于Github利用Hexo搭建一个专属博客]]></title>
      <url>http://kaisai1994.com/blog/2016/05/%E5%9F%BA%E4%BA%8EGithub%E5%88%A9%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%B8%93%E5%B1%9E%E5%8D%9A%E5%AE%A2.html</url>
      <content type="html"><![CDATA[<p>通过本次教程你可以一步一步的搭建一个属于你自己的博客，我们需要的技术有Github和Hexo的配置，只需短短的几十分钟，你就可以搭建一个属于自己的博客了</p>
<a id="more"></a>
<h1 id="建立一个Github"><a href="#建立一个Github" class="headerlink" title="建立一个Github"></a>建立一个Github</h1><p>  首先使用你的github创建一个仓库，仓库名必须为：你的用户名.github.io，这样创建的仓库有自己的项目页面，这样你使用Hexo搭建的博客才能被访问到，起初进行到这步骤的时候我有些疑惑，因为以前听说过使用github page去搭建一个博客，需要创建一个分支提交才会将页面生成，后来才明白这是两件事，<br>  在github上当你使用以上的仓库名时，github就会默认给你生成一个<strong>项目页面</strong>他和<strong>github page</strong>页面不同。</p>
<p><strong>所以知道了这个原理，希望你不要把自己的github仓库名改变~乖乖的改成我说的格式撒~</strong></p>
<p>建立好一个仓库之后，先放着，接下来搭建本地环境</p>
<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>首先我们创建一个文件夹并进入，在git bash下运行以下命令，</p>
<pre><code>npm install hexo-cli -g
</code></pre><p>安装完毕后，在git bash中输入</p>
<pre><code>hexo init
</code></pre><p>然后我们需要安装一些Hexo插件，建议大家都安装上，可以生成sitemap，RSS，部署到git。</p>
<pre><code>npm install hexo-generator-index --save
npm install hexo-generator-archive --save
npm install hexo-generator-category --save
npm install hexo-generator-tag --save
npm install hexo-server --save
npm install hexo-deployer-git --save
npm install hexo-deployer-heroku --save
npm install hexo-deployer-rsync --save
npm install hexo-deployer-openshift --save
npm install hexo-renderer-marked@0.2 --save
npm install hexo-renderer-stylus@0.2 --save
npm install hexo-generator-feed@1 --save
npm install hexo-generator-sitemap@1 --save
</code></pre><p>以上这些创建好了之后几个一个框架就搭建完毕了，你可以通过以下两个命令进行构建和发布</p>
<pre><code>hexo generate 
hexo server
</code></pre><p>执行完以上两个命令你就可以在浏览器地址栏输入<a href="http://localhost:4000可以看到hexo的" target="_blank" rel="external">http://localhost:4000可以看到hexo的</a><br>博客大框已经搭建好了，但是和我们看到的精美博客不同。其实这只是一个小起步。</p>
<h1 id="Hexo大换脸—————使用主题next"><a href="#Hexo大换脸—————使用主题next" class="headerlink" title="Hexo大换脸—————使用主题next"></a>Hexo大换脸—————使用主题next</h1><p>关于主题的使用网络上有太多太多的博客都有介绍主题的使用配置了，其中最官方的还是<br><a href="http://theme-next.iissnan.com/getting-started.html" title="Next官方文档" target="_blank" rel="external">http://theme-next.iissnan.com/getting-started.html</a><br>动手能力还是要有的这里面介绍了很多，非常详细</p>
]]></content>
    </entry>
    
  
  
</search>
