<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小菜鸟大成长</title>
  <subtitle>我喜欢忙忙碌碌的感觉，这样我才能感觉自己活着</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kaisai1994.com/"/>
  <updated>2016-05-30T14:03:21.825Z</updated>
  <id>http://kaisai1994.com/</id>
  
  <author>
    <name>kaisai1994</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据结构与算法之排序</title>
    <link href="http://kaisai1994.com//blog/2016/05/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E6%8E%92%E5%BA%8F.html"/>
    <id>http://kaisai1994.com//blog/2016/05/数据结构与算法之排序.html</id>
    <published>2016-05-30T13:53:44.269Z</published>
    <updated>2016-05-30T14:03:21.825Z</updated>
    
    <content type="html">&lt;h1 id=&quot;冒泡排序&quot;&gt;&lt;a href=&quot;#冒泡排序&quot; class=&quot;headerlink&quot; title=&quot;冒泡排序&quot;&gt;&lt;/a&gt;冒泡排序&lt;/h1&gt;&lt;p&gt;  冒泡排序是通过两辆相邻互换的方式每一轮对比出一个最大或者最小值，好比一群个头大小不同的人排队，个子高的人不停与身边相邻的人对比，然后互换位置，冒泡排序大致就是这个原理。&lt;br&gt;&lt;img src=&quot;http://img.my.csdn.net/uploads/201209/07/1347009396_8149.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;代码实现：&lt;br&gt;    public class BubbleSort {&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  public bubbleSort(){
  inta[]= {49,38,65,97,76,13,27,49,78,34,12,64,5,4,62,99, 98,54,56,17,18,23,34,15,35,25,53,51};
  int temp=0;
  for(int i=0;i&amp;lt;a.length-1;i++){
   for(int j=0;j&amp;lt;a.length-1-i;j++){
     if(a[j]&amp;gt;a[j+1]){
       temp=a[j];
       a[j]=a[j+1];
       a[j+1]=temp;
     }
   }
}
for(int i=0;i&amp;lt;a.length;i++){
   System.out.println(a[i]); 
    }
}
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;冒泡排序&quot;&gt;&lt;a href=&quot;#冒泡排序&quot; class=&quot;headerlink&quot; title=&quot;冒泡排序&quot;&gt;&lt;/a&gt;冒泡排序&lt;/h1&gt;&lt;p&gt;  冒泡排序是通过两辆相邻互换的方式每一轮对比出一个最大或者最小值，好比一群个头大小不同的人排队，个子高的人不停与身边相邻的
    
    </summary>
    
      <category term="数据结构与算法" scheme="http://kaisai1994.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构" scheme="http://kaisai1994.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="http://kaisai1994.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>基于Github利用Hexo搭建一个专属博客</title>
    <link href="http://kaisai1994.com//blog/2016/05/%E5%9F%BA%E4%BA%8EGithub%E5%88%A9%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%B8%93%E5%B1%9E%E5%8D%9A%E5%AE%A2.html"/>
    <id>http://kaisai1994.com//blog/2016/05/基于Github利用Hexo搭建一个专属博客.html</id>
    <published>2016-05-26T14:44:21.915Z</published>
    <updated>2016-05-27T16:05:56.728Z</updated>
    
    <content type="html">&lt;p&gt;通过本次教程你可以一步一步的搭建一个属于你自己的博客，我们需要的技术有Github和Hexo的配置，只需短短的几十分钟，你就可以搭建一个属于自己的博客了&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;建立一个Github&quot;&gt;&lt;a href=&quot;#建立一个Github&quot; class=&quot;headerlink&quot; title=&quot;建立一个Github&quot;&gt;&lt;/a&gt;建立一个Github&lt;/h1&gt;&lt;p&gt;  首先使用你的github创建一个仓库，仓库名必须为：你的用户名.github.io，这样创建的仓库有自己的项目页面，这样你使用Hexo搭建的博客才能被访问到，起初进行到这步骤的时候我有些疑惑，因为以前听说过使用github page去搭建一个博客，需要创建一个分支提交才会将页面生成，后来才明白这是两件事，&lt;br&gt;  在github上当你使用以上的仓库名时，github就会默认给你生成一个&lt;strong&gt;项目页面&lt;/strong&gt;他和&lt;strong&gt;github page&lt;/strong&gt;页面不同。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;所以知道了这个原理，希望你不要把自己的github仓库名改变~乖乖的改成我说的格式撒~&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;建立好一个仓库之后，先放着，接下来搭建本地环境&lt;/p&gt;
&lt;h1 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;#环境搭建&quot; class=&quot;headerlink&quot; title=&quot;环境搭建&quot;&gt;&lt;/a&gt;环境搭建&lt;/h1&gt;&lt;p&gt;首先我们创建一个文件夹并进入，在git bash下运行以下命令，&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install hexo-cli -g
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安装完毕后，在git bash中输入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo init
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后我们需要安装一些Hexo插件，建议大家都安装上，可以生成sitemap，RSS，部署到git。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install hexo-generator-index --save
npm install hexo-generator-archive --save
npm install hexo-generator-category --save
npm install hexo-generator-tag --save
npm install hexo-server --save
npm install hexo-deployer-git --save
npm install hexo-deployer-heroku --save
npm install hexo-deployer-rsync --save
npm install hexo-deployer-openshift --save
npm install hexo-renderer-marked@0.2 --save
npm install hexo-renderer-stylus@0.2 --save
npm install hexo-generator-feed@1 --save
npm install hexo-generator-sitemap@1 --save
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以上这些创建好了之后几个一个框架就搭建完毕了，你可以通过以下两个命令进行构建和发布&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo generate 
hexo server
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行完以上两个命令你就可以在浏览器地址栏输入&lt;a href=&quot;http://localhost:4000可以看到hexo的&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000可以看到hexo的&lt;/a&gt;&lt;br&gt;博客大框已经搭建好了，但是和我们看到的精美博客不同。其实这只是一个小起步。&lt;/p&gt;
&lt;h1 id=&quot;Hexo大换脸—————使用主题next&quot;&gt;&lt;a href=&quot;#Hexo大换脸—————使用主题next&quot; class=&quot;headerlink&quot; title=&quot;Hexo大换脸—————使用主题next&quot;&gt;&lt;/a&gt;Hexo大换脸—————使用主题next&lt;/h1&gt;&lt;p&gt;关于主题的使用网络上有太多太多的博客都有介绍主题的使用配置了，其中最官方的还是&lt;br&gt;&lt;a href=&quot;http://theme-next.iissnan.com/getting-started.html&quot; title=&quot;Next官方文档&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://theme-next.iissnan.com/getting-started.html&lt;/a&gt;&lt;br&gt;动手能力还是要有的这里面介绍了很多，非常详细&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;通过本次教程你可以一步一步的搭建一个属于你自己的博客，我们需要的技术有Github和Hexo的配置，只需短短的几十分钟，你就可以搭建一个属于自己的博客了&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://kaisai1994.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="搭建博客" scheme="http://kaisai1994.com/tags/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
