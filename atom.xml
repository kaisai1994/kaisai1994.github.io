<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小菜鸟大成长</title>
  <subtitle>我喜欢忙忙碌碌的感觉，这样我才能感觉自己活着</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kaisai1994.com/"/>
  <updated>2016-06-02T08:45:33.266Z</updated>
  <id>http://kaisai1994.com/</id>
  
  <author>
    <name>kaisai1994</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android面试经验总结</title>
    <link href="http://kaisai1994.com//blog/2016/06/Android%E9%9D%A2%E8%AF%95%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93.html"/>
    <id>http://kaisai1994.com//blog/2016/06/Android面试经验总结.html</id>
    <published>2016-06-02T08:35:09.100Z</published>
    <updated>2016-06-02T08:45:33.266Z</updated>
    
    <content type="html">&lt;p&gt;最近常混迹一些论坛还有一些讨论组，发现很多好心人发了很多自己的面试经验，我自己觉得是一次很好的总结，所以把各个人的面试经验提到的问题又总结了一下，发现面试技术很多都注意基础，还有一些都是经常会被考到的技术点，自己总结出来一份也帮助自己好好准备面试。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;百度&quot;&gt;&lt;a href=&quot;#百度&quot; class=&quot;headerlink&quot; title=&quot;百度&quot;&gt;&lt;/a&gt;百度&lt;/h1&gt;&lt;h4 id=&quot;网络技术&quot;&gt;&lt;a href=&quot;#网络技术&quot; class=&quot;headerlink&quot; title=&quot;网络技术&quot;&gt;&lt;/a&gt;网络技术&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;TCP和UDP的区别&lt;/li&gt;
&lt;li&gt;TCP如何保证可靠传输&lt;/li&gt;
&lt;li&gt;HTTP的报文格式&lt;/li&gt;
&lt;li&gt;HTTP的头部包含哪些内容&lt;/li&gt;
&lt;li&gt;cookie实在头部还是数据段，为什么&lt;/li&gt;
&lt;li&gt;HTTP回复的状态吗和你知道哪些&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Java面向对象&quot;&gt;&lt;a href=&quot;#Java面向对象&quot; class=&quot;headerlink&quot; title=&quot;Java面向对象:&quot;&gt;&lt;/a&gt;Java面向对象:&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;多态&lt;/li&gt;
&lt;li&gt;设计模式&lt;/li&gt;
&lt;li&gt;Java多线程的实现及同步&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;操作系统&quot;&gt;&lt;a href=&quot;#操作系统&quot; class=&quot;headerlink&quot; title=&quot;操作系统&quot;&gt;&lt;/a&gt;操作系统&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;线程和进程的区别&lt;/li&gt;
&lt;li&gt;操作系统如何实现多线程的调用&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;软件工程&quot;&gt;&lt;a href=&quot;#软件工程&quot; class=&quot;headerlink&quot; title=&quot;软件工程&quot;&gt;&lt;/a&gt;软件工程&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;开发的瀑布模型&lt;/li&gt;
&lt;li&gt;开发软件项目的历程&lt;/li&gt;
&lt;li&gt;系统设计和详细设计的区别，类图在哪个阶段画的&lt;/li&gt;
&lt;li&gt;测试&lt;/li&gt;
&lt;li&gt;如何做到覆盖测试，覆盖到每个分支&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Android&quot;&gt;&lt;a href=&quot;#Android&quot; class=&quot;headerlink&quot; title=&quot;Android&quot;&gt;&lt;/a&gt;Android&lt;/h4&gt;&lt;p&gt;区别2.X 3.X 4.X&lt;/p&gt;
&lt;h1 id=&quot;蘑菇街&quot;&gt;&lt;a href=&quot;#蘑菇街&quot; class=&quot;headerlink&quot; title=&quot;蘑菇街&quot;&gt;&lt;/a&gt;蘑菇街&lt;/h1&gt;&lt;h4 id=&quot;Android-1&quot;&gt;&lt;a href=&quot;#Android-1&quot; class=&quot;headerlink&quot; title=&quot;Android&quot;&gt;&lt;/a&gt;Android&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;touch event的事件传递机制&lt;/li&gt;
&lt;li&gt;activity四种启动模式&lt;/li&gt;
&lt;li&gt;常见设计模式和使用情况&lt;/li&gt;
&lt;li&gt;获取一个button的高度&lt;/li&gt;
&lt;li&gt;自定义View的流程&lt;/li&gt;
&lt;li&gt;内存泄漏&lt;/li&gt;
&lt;li&gt;thread的start和run方法有什么区别，开启一个线程必须调用start方法么&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;网易&quot;&gt;&lt;a href=&quot;#网易&quot; class=&quot;headerlink&quot; title=&quot;网易&quot;&gt;&lt;/a&gt;网易&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;APP怎么防止被强杀，怎么做到多进程&lt;/li&gt;
&lt;li&gt;Retrofit的优点和好处 MD的控件&lt;/li&gt;
&lt;li&gt;消息机制&lt;/li&gt;
&lt;li&gt;布局优化 merge include viewstub&lt;/li&gt;
&lt;li&gt;android中有哪些动画，View动画与属性动画的区别&lt;/li&gt;
&lt;li&gt;android网络优化&lt;/li&gt;
&lt;li&gt;自定义view的过程 三个测量模式，怎样从onMesure的两个参数中获取长度&lt;/li&gt;
&lt;li&gt;事件分发机制&lt;/li&gt;
&lt;li&gt;ListView 加载网络图片，怎样防止图片错乱&lt;/li&gt;
&lt;li&gt;java中的四种引用&lt;/li&gt;
&lt;li&gt;类加载器，双亲委托&lt;/li&gt;
&lt;li&gt;http和https的区别 RSA是什么，数字签名&lt;/li&gt;
&lt;li&gt;dp与px的转换公式，为什么用dp&lt;/li&gt;
&lt;li&gt;打包签名流程&lt;/li&gt;
&lt;li&gt;一键结束全部程序，activity会不调用onstop ondestory被强杀怎么恢复数据&lt;/li&gt;
&lt;li&gt;ANR几秒&lt;/li&gt;
&lt;li&gt;快排 时间复杂度 O（n2）是怎样的情况&lt;/li&gt;
&lt;li&gt;volatile和synchronized的区别，锁有哪些，static和synchd修饰的方法是什么锁，两个线程同时i++会怎么样还有线程池&lt;/li&gt;
&lt;li&gt;AsyncTask &lt;/li&gt;
&lt;li&gt;有个线程跑完后会显示textview文字，但是没跑完就按返回会发生什么&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;蘑菇街Android开发&quot;&gt;&lt;a href=&quot;#蘑菇街Android开发&quot; class=&quot;headerlink&quot; title=&quot;蘑菇街Android开发&quot;&gt;&lt;/a&gt;蘑菇街Android开发&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Git做代码托管，rebase，fetch和pull&lt;/li&gt;
&lt;li&gt;Java虚函数&lt;/li&gt;
&lt;li&gt;多态&lt;/li&gt;
&lt;li&gt;Java反射，类加载的Class怎么调用类的所有属性和方法&lt;/li&gt;
&lt;li&gt;Android中的几种Context有什么区别&lt;/li&gt;
&lt;li&gt;Android内存泄漏&lt;/li&gt;
&lt;li&gt;bitmap复用&lt;/li&gt;
&lt;li&gt;OOM&lt;/li&gt;
&lt;li&gt;外观模式&lt;/li&gt;
&lt;li&gt;FrameWork源码&lt;/li&gt;
&lt;li&gt;自定义控件&lt;/li&gt;
&lt;li&gt;Android动态加载&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;蘑菇街-1&quot;&gt;&lt;a href=&quot;#蘑菇街-1&quot; class=&quot;headerlink&quot; title=&quot;蘑菇街&quot;&gt;&lt;/a&gt;蘑菇街&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Android四大组件&lt;/li&gt;
&lt;li&gt;Android生命周期onpause和onstop&lt;/li&gt;
&lt;li&gt;Fragment是否看过源码&lt;/li&gt;
&lt;li&gt;Service有哪几种&lt;/li&gt;
&lt;li&gt;隐式启动和显式启动&lt;/li&gt;
&lt;li&gt;Service两种启动方式&lt;/li&gt;
&lt;li&gt;启动线程方式有哪几种&lt;/li&gt;
&lt;li&gt;handle消息队列相关&lt;/li&gt;
&lt;li&gt;几种常见布局， 布局group树过程&lt;/li&gt;
&lt;li&gt;weight属性&lt;/li&gt;
&lt;li&gt;布局优化相关&lt;/li&gt;
&lt;li&gt;ArraylistLinklist&lt;/li&gt;
&lt;li&gt;线程进程区别&lt;/li&gt;
&lt;li&gt;一个app能否是多线程&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;360&quot;&gt;&lt;a href=&quot;#360&quot; class=&quot;headerlink&quot; title=&quot;360&quot;&gt;&lt;/a&gt;360&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;网络框架实现，volley原理&lt;/li&gt;
&lt;li&gt;线程池原理，java线程池&lt;/li&gt;
&lt;li&gt;一个activity只能有一个进程么&lt;/li&gt;
&lt;li&gt;activity任务栈，启动模式&lt;/li&gt;
&lt;li&gt;夜间主题&lt;/li&gt;
&lt;li&gt;动态加载原理，classloader&lt;/li&gt;
&lt;li&gt;listview实现左滑&lt;/li&gt;
&lt;li&gt;view的事件分发与渲染流程&lt;/li&gt;
&lt;li&gt;LruCache的理解原理以及哪些方式实现缓存调度&lt;/li&gt;
&lt;li&gt;GC原理，实现方式，能否手动控制GC回收&lt;/li&gt;
&lt;li&gt;OOM内存泄漏的问题&lt;/li&gt;
&lt;li&gt;mvp与mvc区别，实现原理&lt;/li&gt;
&lt;li&gt;volley原理，发送五个请求&lt;/li&gt;
&lt;li&gt;图片缓存技术的实现&lt;/li&gt;
&lt;li&gt;listview原理，adpter与view如何绑定的，如何自己设计一个类似listview的自定义view，子item复用，管理以及getview实现&lt;/li&gt;
&lt;li&gt;进程实现方式&lt;/li&gt;
&lt;li&gt;asynctask&lt;/li&gt;
&lt;li&gt;CG原理&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;网易-1&quot;&gt;&lt;a href=&quot;#网易-1&quot; class=&quot;headerlink&quot; title=&quot;网易&quot;&gt;&lt;/a&gt;网易&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;推送。长连接 心跳连接&lt;/li&gt;
&lt;li&gt;LTE协议栈项目&lt;/li&gt;
&lt;li&gt;项目开源框架的源码分析&lt;/li&gt;
&lt;li&gt;加密算法&lt;/li&gt;
&lt;li&gt;消息处理机制&lt;/li&gt;
&lt;li&gt;asynctask&lt;/li&gt;
&lt;li&gt;android卡顿优化&lt;/li&gt;
&lt;li&gt;并发&lt;/li&gt;
&lt;li&gt;属性动画&lt;/li&gt;
&lt;li&gt;touch事件分发机制&lt;/li&gt;
&lt;li&gt;android开机过程&lt;/li&gt;
&lt;li&gt;Service与Thread的区别&lt;/li&gt;
&lt;li&gt;SQLite并发读取或者写入&lt;/li&gt;
&lt;li&gt;线程与进程&lt;/li&gt;
&lt;li&gt;Activity与Service的通信问题&lt;/li&gt;
&lt;li&gt;Activity与Fragment的生命周期&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;腾讯-amp-阿里&quot;&gt;&lt;a href=&quot;#腾讯-amp-阿里&quot; class=&quot;headerlink&quot; title=&quot;腾讯 &amp;amp; 阿里&quot;&gt;&lt;/a&gt;腾讯 &amp;amp; 阿里&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;volley原理&lt;/li&gt;
&lt;li&gt;403是什么意思&lt;/li&gt;
&lt;li&gt;TCP如何实现可靠传输&lt;/li&gt;
&lt;li&gt;线程进程的区别&lt;/li&gt;
&lt;li&gt;调度算法&lt;/li&gt;
&lt;li&gt;快排&lt;/li&gt;
&lt;li&gt;handle looper MessageQueen&lt;/li&gt;
&lt;li&gt;UIL和picasso的区别，底层实现&lt;/li&gt;
&lt;li&gt;java四种引用&lt;/li&gt;
&lt;li&gt;IPC几种通信方式&lt;/li&gt;
&lt;li&gt;static加在方法上有什么特殊的含义&lt;/li&gt;
&lt;li&gt;hashmap的原理&lt;/li&gt;
&lt;li&gt;String StringBuilder StringBuffer&lt;/li&gt;
&lt;li&gt;LRU&lt;/li&gt;
&lt;li&gt;IPC几种通信方式&lt;/li&gt;
&lt;li&gt;ListView 和RecycleView&lt;/li&gt;
&lt;li&gt;ActionBar和Toolbar&lt;/li&gt;
&lt;li&gt;重写View&lt;/li&gt;
&lt;li&gt;Volley&lt;/li&gt;
&lt;li&gt;UIL的原理&lt;/li&gt;
&lt;li&gt;zygote死掉后会重新启动&lt;/li&gt;
&lt;li&gt;zygote和systemservice&lt;/li&gt;
&lt;li&gt;Android系统为系统安全性做什么&lt;/li&gt;
&lt;li&gt;java基础知识&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近常混迹一些论坛还有一些讨论组，发现很多好心人发了很多自己的面试经验，我自己觉得是一次很好的总结，所以把各个人的面试经验提到的问题又总结了一下，发现面试技术很多都注意基础，还有一些都是经常会被考到的技术点，自己总结出来一份也帮助自己好好准备面试。&lt;br&gt;
    
    </summary>
    
      <category term="面试总结" scheme="http://kaisai1994.com/categories/%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="面试" scheme="http://kaisai1994.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>基于Github利用Hexo搭建一个专属博客</title>
    <link href="http://kaisai1994.com//blog/2016/05/%E5%9F%BA%E4%BA%8EGithub%E5%88%A9%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%B8%93%E5%B1%9E%E5%8D%9A%E5%AE%A2.html"/>
    <id>http://kaisai1994.com//blog/2016/05/基于Github利用Hexo搭建一个专属博客.html</id>
    <published>2016-05-26T14:44:21.915Z</published>
    <updated>2016-05-27T16:05:56.728Z</updated>
    
    <content type="html">&lt;p&gt;通过本次教程你可以一步一步的搭建一个属于你自己的博客，我们需要的技术有Github和Hexo的配置，只需短短的几十分钟，你就可以搭建一个属于自己的博客了&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;建立一个Github&quot;&gt;&lt;a href=&quot;#建立一个Github&quot; class=&quot;headerlink&quot; title=&quot;建立一个Github&quot;&gt;&lt;/a&gt;建立一个Github&lt;/h1&gt;&lt;p&gt;  首先使用你的github创建一个仓库，仓库名必须为：你的用户名.github.io，这样创建的仓库有自己的项目页面，这样你使用Hexo搭建的博客才能被访问到，起初进行到这步骤的时候我有些疑惑，因为以前听说过使用github page去搭建一个博客，需要创建一个分支提交才会将页面生成，后来才明白这是两件事，&lt;br&gt;  在github上当你使用以上的仓库名时，github就会默认给你生成一个&lt;strong&gt;项目页面&lt;/strong&gt;他和&lt;strong&gt;github page&lt;/strong&gt;页面不同。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;所以知道了这个原理，希望你不要把自己的github仓库名改变~乖乖的改成我说的格式撒~&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;建立好一个仓库之后，先放着，接下来搭建本地环境&lt;/p&gt;
&lt;h1 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;#环境搭建&quot; class=&quot;headerlink&quot; title=&quot;环境搭建&quot;&gt;&lt;/a&gt;环境搭建&lt;/h1&gt;&lt;p&gt;首先我们创建一个文件夹并进入，在git bash下运行以下命令，&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install hexo-cli -g
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安装完毕后，在git bash中输入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo init
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后我们需要安装一些Hexo插件，建议大家都安装上，可以生成sitemap，RSS，部署到git。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install hexo-generator-index --save
npm install hexo-generator-archive --save
npm install hexo-generator-category --save
npm install hexo-generator-tag --save
npm install hexo-server --save
npm install hexo-deployer-git --save
npm install hexo-deployer-heroku --save
npm install hexo-deployer-rsync --save
npm install hexo-deployer-openshift --save
npm install hexo-renderer-marked@0.2 --save
npm install hexo-renderer-stylus@0.2 --save
npm install hexo-generator-feed@1 --save
npm install hexo-generator-sitemap@1 --save
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以上这些创建好了之后几个一个框架就搭建完毕了，你可以通过以下两个命令进行构建和发布&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo generate 
hexo server
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行完以上两个命令你就可以在浏览器地址栏输入&lt;a href=&quot;http://localhost:4000可以看到hexo的&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000可以看到hexo的&lt;/a&gt;&lt;br&gt;博客大框已经搭建好了，但是和我们看到的精美博客不同。其实这只是一个小起步。&lt;/p&gt;
&lt;h1 id=&quot;Hexo大换脸—————使用主题next&quot;&gt;&lt;a href=&quot;#Hexo大换脸—————使用主题next&quot; class=&quot;headerlink&quot; title=&quot;Hexo大换脸—————使用主题next&quot;&gt;&lt;/a&gt;Hexo大换脸—————使用主题next&lt;/h1&gt;&lt;p&gt;关于主题的使用网络上有太多太多的博客都有介绍主题的使用配置了，其中最官方的还是&lt;br&gt;&lt;a href=&quot;http://theme-next.iissnan.com/getting-started.html&quot; title=&quot;Next官方文档&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://theme-next.iissnan.com/getting-started.html&lt;/a&gt;&lt;br&gt;动手能力还是要有的这里面介绍了很多，非常详细&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;通过本次教程你可以一步一步的搭建一个属于你自己的博客，我们需要的技术有Github和Hexo的配置，只需短短的几十分钟，你就可以搭建一个属于自己的博客了&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://kaisai1994.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="搭建博客" scheme="http://kaisai1994.com/tags/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
